(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{430:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"history和hash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history和hash"}},[t._v("#")]),t._v(" history和hash")]),t._v(" "),s("p",[t._v("路由的基本原理\n路由做的事情：管控 URL 变化，改变浏览器中的地址。\nRouter 做的事情：URL 改变时，触发渲染，渲染对应的组件。")]),t._v(" "),s("blockquote",[s("p",[t._v("前端路由\n改变 url 且不让浏览器像服务器发送请求。\n可以监听到 url 的变化\n可以在不刷新页面的前提下动态改变浏览器地址栏中的URL地址")])]),t._v(" "),s("h2",{attrs:{id:"hash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[t._v("#")]),t._v(" hash")]),t._v(" "),s("blockquote",[s("p",[t._v("增加监听，当 "),s("code",[t._v("URL")]),t._v(" 的 "),s("code",[t._v("Hash")]),t._v(" 发生变化时，触发 "),s("code",[t._v("hashChange")]),t._v(" 注册的回调，回调中去进行相类似的操作，进而展示不同的内容。")])]),t._v(" "),s("p",[t._v('根据路由的值，替换容器里的组件，调用方法为：document.querySelector("xxx").innerHTML\n'),s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/363380405",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hashchange'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 监听改变 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("获取或改变hash值："),s("code",[t._v("window.location.hash")])]),t._v(" "),s("h2",{attrs:{id:"history"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history"}},[t._v("#")]),t._v(" history")]),t._v(" "),s("blockquote",[s("p",[t._v("通过 pushState 和 replaceState 来检测地址的改变，切换不同的页面。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// history相关api，都是修改浏览器历史记录")]),t._v("\nHistory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nHistory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forward")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nHistory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("go")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//路由跳转几步，n为2往前跳转2个页面，-2往后跳转两个页面")]),t._v("\nHistory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不能跨域")]),t._v("\nHistory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"hash-模式和-history-模式对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash-模式和-history-模式对比"}},[t._v("#")]),t._v(" Hash 模式和 History 模式对比")]),t._v(" "),s("p",[t._v("Hash 模式是使用 URL 的 Hash 来模拟一个完整的 URL，因此当 URL 改变的时候页面并不会重载。History 模式则会直接改变 URL，所以在路由跳转的时候会丢失一些地址信息，在刷新或直接访问路由地址的时候会匹配不到静态资源。因此需要在服务器上配置一些信息，让服务器增加一个覆盖所有情况的候选资源，比如跳转 index.html 什么的")]),t._v(" "),s("h3",{attrs:{id:"hash路由-优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash路由-优缺点"}},[t._v("#")]),t._v(" hash路由 优缺点")]),t._v(" "),s("p",[t._v("优点")]),t._v(" "),s("p",[t._v("实现简单，兼容性好（兼容到ie8）\n绝大多数前端框架均提供了给予hash的路由实现\n不需要服务器端进行任何设置和开发\n除了资源加载和ajax请求以外，不会发起其他请求\n缺点")]),t._v(" "),s("p",[t._v("对于部分需要重定向的操作，后端无法获取hash部分内容，导致后台无法取得url中的数据，典型的例子就是微信公众号的oauth验证\n服务器端无法准确跟踪前端路由信息\n对于需要锚点功能的需求会与目前路由机制冲突")]),t._v(" "),s("h3",{attrs:{id:"history-browser-路由-优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history-browser-路由-优缺点"}},[t._v("#")]),t._v(" History(browser)路由 优缺点")]),t._v(" "),s("p",[t._v("优点")]),t._v(" "),s("p",[t._v("对于重定向过程中不会丢失url中的参数。后端可以拿到这部分数据\n绝大多数前段框架均提供了browser的路由实现\n后端可以准确跟踪路由信息\n可以使用history.state来获取当前url对应的状态信息\n缺点")]),t._v(" "),s("p",[t._v("兼容性不如hash路由(只兼容到IE10)\n需要后端支持，每次返回html文档")])])}),[],!1,null,null,null);s.default=r.exports}}]);