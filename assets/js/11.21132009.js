(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{414:function(v,_,e){"use strict";e.r(_);var t=e(2),s=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"em-px-rem-vh-vw"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#em-px-rem-vh-vw"}},[v._v("#")]),v._v(" em/px/rem/vh/vw")]),v._v(" "),_("blockquote",[_("p",[v._v("从CSS3开始，新增了rem、vh、vw、vm等一些新的计量单位,利用这些新的单位开发出比较良好的响应式页面，适应多种不同分辨率的终端，包括移动设备等")])]),v._v(" "),_("p",[v._v("在css单位中，可以分为长度单位、绝对单位，如下表所指示")]),v._v(" "),_("h2",{attrs:{id:"css单位"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#css单位"}},[v._v("#")]),v._v(" CSS单位")]),v._v(" "),_("p",[v._v("相对长度单位 em、ex、ch、rem、vw、vh、vmin、vmax、%\n绝对长度单位 cm、mm、in、px、pt、pc\n这里我们主要讲述px、em、rem、vh、vw")]),v._v(" "),_("h2",{attrs:{id:"px"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#px"}},[v._v("#")]),v._v(" px")]),v._v(" "),_("p",[v._v("px，表示像素，所谓像素就是呈现在我们显示器上的一个个小点，每个像素点都是大小等同的，所以像素为计量单位被分在了绝对长度单位中")]),v._v(" "),_("p",[v._v("有些人会把px认为是相对长度，原因在于在移动端中存在设备像素比，px实际显示的大小是不确定的")]),v._v(" "),_("p",[v._v("这里之所以认为px为绝对单位，在于px的大小和元素的其他属性无关")]),v._v(" "),_("h2",{attrs:{id:"em"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#em"}},[v._v("#")]),v._v(" em")]),v._v(" "),_("p",[v._v("em是相对长度单位。"),_("strong",[v._v("相对于当前对象内文本的字体尺寸")]),v._v("。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸（1em = 16px）")]),v._v(" "),_("p",[v._v("为了简化 font-size 的换算，我们需要在css中的 body 选择器中声明font-size= 62.5%，这就使 em 值变为 16px*62.5% = 10px")]),v._v(" "),_("p",[v._v("这样 12px = 1.2em, 10px = 1em, 也就是说只需要将你的原来的px 数值除以 10，然后换上 em作为单位就行了")]),v._v(" "),_("p",[v._v("特点：")]),v._v(" "),_("ul",[_("li",[v._v("em 的值并不是固定的")]),v._v(" "),_("li",[v._v("em 会继承父级元素的字体大小")]),v._v(" "),_("li",[v._v("em 是相对长度单位。"),_("strong",[v._v("相对于当前对象内文本的字体尺寸")]),v._v("。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸")]),v._v(" "),_("li",[v._v("任意浏览器的默认字体高都是 16px")])]),v._v(" "),_("h2",{attrs:{id:"rem"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#rem"}},[v._v("#")]),v._v(" rem")]),v._v(" "),_("p",[v._v("rem，相对单位，"),_("strong",[v._v("相对的只是HTML根元素font-size的值")])]),v._v(" "),_("p",[v._v("同理，如果想要简化font-size的转化，我们可以在根元素html中加入font-size: 62.5%")]),v._v(" "),_("p",[_("code",[v._v("html {font-size: 62.5%; } /* 公式16px*62.5%=10px */")]),v._v("\n这样页面中1rem=10px、1.2rem=12px、1.4rem=14px、1.6rem=16px;使得视觉、使用、书写都得到了极大的帮助")]),v._v(" "),_("p",[v._v("特点：")]),v._v(" "),_("p",[v._v("rem单位可谓集相对大小和绝对大小的优点于一身\n和em不同的是rem总是相对于根元素，而不像em一样使用级联的方式来计算尺寸")]),v._v(" "),_("h2",{attrs:{id:"vh、vw"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vh、vw"}},[v._v("#")]),v._v(" vh、vw")]),v._v(" "),_("p",[v._v("vw ，就是根据窗口的宽度，分成100等份，100vw就表示满宽，50vw就表示一半宽。（vw 始终是针对窗口的宽），同理，vh则为窗口的高度")]),v._v(" "),_("p",[v._v("这里的窗口分成几种情况：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("在桌面端，指的是浏览器的可视区域")])]),v._v(" "),_("li",[_("p",[v._v("移动端指的就是布局视口")])])]),v._v(" "),_("p",[v._v("像vw、vh，比较容易混淆的一个单位是%，不过"),_("strong",[v._v("百分比")]),v._v("宽泛的讲是相对于父元素：")]),v._v(" "),_("ul",[_("li",[v._v("对于普通定位元素就是我们理解的父元素")]),v._v(" "),_("li",[v._v("对于position: absolute;的元素是相对于已定位的父元素")]),v._v(" "),_("li",[v._v("对于position: fixed;的元素是相对于 ViewPort（可视窗口）")])]),v._v(" "),_("h2",{attrs:{id:"关于设备像素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#关于设备像素"}},[v._v("#")]),v._v(" 关于设备像素")]),v._v(" "),_("p",[v._v("无缩放情况下，1个CSS像素等于1个设备独立像素")]),v._v(" "),_("p",[v._v("设备像素由屏幕生产之后就不发生改变，而"),_("strong",[v._v("设备独立像素")]),v._v("是一个虚拟单位会发生改变")]),v._v(" "),_("p",[v._v("PC端中，1个设备独立像素 = 1个设备像素 （在100%，未缩放的情况下）")]),v._v(" "),_("p",[v._v("在移动端中，标准屏幕（160ppi）下 1个设备独立像素 = 1个设备像素")]),v._v(" "),_("p",[v._v("设备像素比（dpr） = 设备像素 / 设备独立像素")]),v._v(" "),_("p",[v._v("每英寸像素（ppi），值越大，图像越清晰")])])}),[],!1,null,null,null);_.default=s.exports}}]);