(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{437:function(t,a,s){"use strict";s.r(a);var r=s(2),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ast"}},[t._v("#")]),t._v(" AST")]),t._v(" "),a("p",[t._v("来源链接："),a("a",{attrs:{href:"https://juejin.cn/post/6844904035271573511",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/6844904035271573511"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"ast-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ast-是什么"}},[t._v("#")]),t._v(" AST 是什么")]),t._v(" "),a("p",[t._v("抽象语法树 (Abstract Syntax Tree)，简称 AST，它是源代码语法结构的一种抽象表示。它以树状的形式表现编程语言的语法结构，树上的每个节点都表示源代码中的一种结构。")]),t._v(" "),a("h2",{attrs:{id:"ast-有什么用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ast-有什么用"}},[t._v("#")]),t._v(" AST 有什么用")]),t._v(" "),a("p",[t._v("AST 运用广泛，比如：")]),t._v(" "),a("p",[t._v("编辑器的错误提示、代码格式化、代码高亮、代码自动补全；\nelint、pretiier 对代码错误或风格的检查；\nwebpack 通过 babel 转译 javascript 语法；")]),t._v(" "),a("p",[t._v("并且如果你想了解 js 编译执行的原理，那么你就得了解 AST。")]),t._v(" "),a("h2",{attrs:{id:"ast-如何生成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ast-如何生成"}},[t._v("#")]),t._v(" AST 如何生成")]),t._v(" "),a("p",[a("strong",[t._v("js 执行的第一步是读取 js 文件中的字符流，然后通过词法分析生成 token，之后再通过语法分析( Parser )生成 AST，最后生成机器码执行。")])]),t._v(" "),a("p",[t._v("整个解析过程主要分为以下两个步骤：")]),t._v(" "),a("p",[a("strong",[t._v("分词")]),t._v("：将整个代码字符串分割成最小语法单元数组\n"),a("strong",[t._v("语法分析")]),t._v("：在分词基础上建立分析语法单元之间的关系")]),t._v(" "),a("p",[t._v("JS Parser 是 js 语法解析器，它可以将 js 源码转成 AST，常见的 Parser 有 esprima、traceur、acorn、shift 等。")]),t._v(" "),a("h2",{attrs:{id:"词法分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#词法分析"}},[t._v("#")]),t._v(" 词法分析")]),t._v(" "),a("p",[t._v("词法分析，也称之为扫描（scanner），简单来说就是调用 next() 方法，一个一个字母的来读取字符，然后与定义好的 JavaScript 关键字符做比较，生成对应的Token。Token 是一个不可分割的最小单元:")]),t._v(" "),a("blockquote",[a("p",[t._v("例如 var 这三个字符，它只能作为一个整体，语义上不能再被分解，因此它是一个 Token。")])]),t._v(" "),a("p",[t._v("词法分析器里，每个关键字是一个 Token ，每个标识符是一个 Token，每个操作符是一个 Token，每个标点符号也都是一个 Token。除此之外，还会过滤掉源程序中的注释和空白字符（换行符、空格、制表符等。\n最终，整个代码将被分割进一个tokens列表（或者说一维数组）。\n语法分析\n语法分析会将词法分析出来的 Token 转化成有语法含义的抽象语法树结构。同时，验证语法，语法如果有错的话，抛出语法错误。")])])}),[],!1,null,null,null);a.default=e.exports}}]);