(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{455:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"装饰器decorator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#装饰器decorator"}},[t._v("#")]),t._v(" 装饰器Decorator")]),t._v(" "),s("h2",{attrs:{id:"什么是装饰器-它的目的和类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是装饰器-它的目的和类型"}},[t._v("#")]),t._v(" 什么是装饰器？它的目的和类型")]),t._v(" "),s("blockquote",[s("p",[t._v("装饰器是一种特殊的声明，可附加在类、方法、访问器、属性、参数声明上。")])]),t._v(" "),s("p",[t._v("装饰器使用 @expression 的形式，其中 expression 必须能够演算为在运行时调用的函数，其中包括装饰声明信息。\n它起到了以声明式方法将元信息添加至已有代码的作用。\n装饰器类型及其执行优先级为")]),t._v(" "),s("p",[t._v("类装饰器——优先级 4 （对象实例化，静态）\n方法装饰器——优先级 2 （对象实例化，静态）\n访问器或属性装饰器——优先级 3 （对象实例化，静态）\n参数装饰器——优先级 1 （对象实例化，静态）\n注意，如果装饰器应用于类构造函数的参数，那么不同装饰器的优先级为：1. 参数装饰器，2. 方法装饰器，3. 访问器或参数装饰器，4. 构造器参数装饰器，5. 类装饰器。")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("classDecorator")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TargetClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fieldDecorator")])]),t._v("\n  targetField "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类实例属性")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("funDecorator")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("targetFun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类方法")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("accessorDecorator")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("targetGetFun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类访问器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"装饰者模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#装饰者模式"}},[t._v("#")]),t._v(" 装饰者模式")]),t._v(" "),s("p",[t._v("装饰者模式就是能够在不改变对象自身的基础上，在程序运行期间给对象动态地添加职责。打个比方，一个人在天气冷的时候要穿棉衣，天气热的时候穿短袖，可无论穿什么，本质上他还是一个人，只不过身上穿了不同的衣服。")]),t._v(" "),s("p",[t._v("所以简单来说， Decorator 就是一种动态地往一个类中添加新的行为的设计模式， 它可以在类运行时， 扩展一个类的功能， 并且去修改类本身的属性和方法， 使其可以在不同类之间更灵活的共用一些属性和方法。")]),t._v(" "),s("p",[t._v("@ 是针对这种设计模式的一个语法糖，不过目前还处于第 2 阶段提案中，使用它之前需要使用 Babel 模块编译成 ES5 或 ES6。\n怎么使用装饰器")]),t._v(" "),s("p",[t._v("链接："),s("a",{attrs:{href:"https://juejin.cn/post/7072883925764276254",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/7072883925764276254"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);